{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState } from 'react';\nimport { useLocalStorage } from 'Components/Hooks/useLocalStorage';\nimport { useInput } from 'Components/Hooks/useInput';\nimport styled from 'styled-components';\nconst Input = styled.input`\n  width: 100%;\n`;\n\nconst Form = props => {\n  const {\n    0: submitted,\n    1: setSubmitted\n  } = useState(null);\n  const [variable, setVariable] = useLocalStorage(props.variable, null);\n  const {\n    value,\n    bind,\n    reset\n  } = useInput('');\n\n  const handleChange = event => {\n    console.log(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Recording ' + props.variable + ' to window.localStorage: ' + value);\n    setSubmitted(true);\n    setVariable(value);\n    reset();\n\n    if (props.close) {\n      props.close();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-2\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", null, __jsx(\"div\", {\n    className: \"mb-3\"\n  }, props.label, \":\"), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(Input, _extends({\n    type: \"text\",\n    size: \"80\",\n    wrap: \"hard\",\n    value: value,\n    placeholder: `Enter ${props.variable} here`\n  }, bind)))), __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\"\n  }, \"Submit\"))), props.showConfirmation && __jsx(\"p\", {\n    className: \"mt-3 text-danger\"\n  }, props.label, \" submitted:\", ' ', variable || `no ${props.variable} submitted yet`));\n};\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}