{"ast":null,"code":"import { google } from 'googleapis';\nconst civic = google.civicinfo({\n  version: 'v2',\n  auth: process.env.GAPI_KEY\n});\nlet info;\nexport default (async (req, res, error) => {\n  info = await civic.elections.electionQuery({\n    officialOnly: false,\n    returnAllAvailableData: true,\n    prettyPrint: true,\n    alt: 'json'\n  });\n\n  if (typeof info === 'object') {\n    return res.status(200).json(info);\n  } else {\n    return res.status(404).json({\n      message: `electionQuery() data not found or unrecognized type`\n    });\n  } // return res.status(200).json(info);\n\n});","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/pages/api/elections.js"],"names":["google","civic","civicinfo","version","auth","process","env","GAPI_KEY","info","req","res","error","elections","electionQuery","officialOnly","returnAllAvailableData","prettyPrint","alt","status","json","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,SAAP,CAAiB;AAC7BC,EAAAA,OAAO,EAAE,IADoB;AAE7BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFW,CAAjB,CAAd;AAKA,IAAIC,IAAJ;AACA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,KAAjB,KAA2B;AACxCH,EAAAA,IAAI,GAAG,MAAMP,KAAK,CAACW,SAAN,CAAgBC,aAAhB,CAA8B;AACzCC,IAAAA,YAAY,EAAE,KAD2B;AAEzCC,IAAAA,sBAAsB,EAAE,IAFiB;AAGzCC,IAAAA,WAAW,EAAE,IAH4B;AAIzCC,IAAAA,GAAG,EAAE;AAJoC,GAA9B,CAAb;;AAOA,MAAI,OAAOT,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOE,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBX,IAArB,CAAP;AACD,GAFD,MAEO;AACL,WAAOE,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,MAAAA,OAAO,EAAG;AADgB,KAArB,CAAP;AAGD,GAduC,CAgBxC;;AACD,CAjBD","sourcesContent":["import { google } from 'googleapis';\n\nconst civic = google.civicinfo({\n  version: 'v2',\n  auth: process.env.GAPI_KEY,\n});\n\nlet info;\nexport default async (req, res, error) => {\n  info = await civic.elections.electionQuery({\n    officialOnly: false,\n    returnAllAvailableData: true,\n    prettyPrint: true,\n    alt: 'json',\n  });\n\n  if (typeof info === 'object') {\n    return res.status(200).json(info);\n  } else {\n    return res.status(404).json({\n      message: `electionQuery() data not found or unrecognized type`,\n    });\n  }\n\n  // return res.status(200).json(info);\n};\n"]},"metadata":{},"sourceType":"module"}