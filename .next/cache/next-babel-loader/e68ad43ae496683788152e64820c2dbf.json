{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: blue;\\n  text-decoration: none;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport Moment from 'react-moment';\nimport styled from 'styled-components';\nimport { Card } from 'react-bootstrap';\nvar IdLink = styled.a(_templateObject());\n\nvar ElectionInfo = function ElectionInfo(props) {\n  var _useState = useState(null),\n      submitted = _useState[0],\n      setSubmitted = _useState[1];\n\n  var _useState2 = useState(id, null),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var router = useRouter();\n  var url = '/api/elections';\n\n  var fetcher = function fetcher(url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  };\n\n  var _useSWR = useSWR(url, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Failed to load data\"));\n  if (!data) return __jsx(\"div\", {\n    className: \"spinner-border spinner-border-lg text-danger\",\n    role: \"status\",\n    style: {\n      margin: '10rem',\n      width: '20rem',\n      height: '20rem'\n    }\n  });\n\n  if (data && data !== null & !data.data.elections || data.data.elections.length <= 0 || data.data.elections === null) {\n    return __jsx(Card, {\n      bg: \"danger\",\n      className: \"mb-3 shadow text-white\"\n    }, __jsx(Card.Header, null, __jsx(\"h3\", {\n      className: \"m-3 font-weight-bold\"\n    }, \"Attention: General elections not found in database\")), __jsx(Card.Body, null, __jsx(\"h5\", {\n      className: \"m-3\"\n    }, \"If you are aware of an upcoming election, please contact your state's election office to ask for more info\"), __jsx(Link, {\n      href: \"https://www.usa.gov/election-office\"\n    }, __jsx(\"a\", {\n      className: \"m-3 font-weight-bold\",\n      style: {\n        textTransform: 'uppercase',\n        color: 'black'\n      },\n      target: \"_blank\"\n    }, __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-info-circle fa-2x\"\n    }), \" \\xA0Click here to search for your state\\xA0\", ' ', __jsx(\"i\", {\n      className: \"fas fa-question-circle fa-2x\"\n    }))))));\n  }\n\n  if (data && data !== null) {\n    var elections = data.data.elections;\n\n    var handleClick = function handleClick(event, id) {\n      event.preventDefault();\n      console.log('Recording ' + id + ' to window.localStorage');\n      window.localStorage.removeItem('id');\n      window.localStorage.setItem('id', id);\n      setSubmitted(true);\n      setId(id);\n      router.push('/voterinfo');\n    }; // const handleIsOpen = () => setIsOpen(!isOpen);\n\n\n    return __jsx(Card, {\n      className: \"mb-3 shadow\"\n    }, __jsx(Card.Body, null, __jsx(\"div\", null, __jsx(\"p\", {\n      className: \"blockquote\"\n    }, \"Click \\xA0\", __jsx(\"i\", {\n      className: \"far fa-hand-point-down fa-2x\"\n    }), \"\\xA0 election id in your area\")), __jsx(\"table\", {\n      className: \"table table-hover\"\n    }, __jsx(\"thead\", {\n      style: {\n        fontFamily: 'Righteous, sans-serif'\n      }\n    }, __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"col\"\n    }, \"#\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"ID\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Name\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Date\"))), __jsx(\"tbody\", null, elections.map(function (election, idx) {\n      return __jsx(\"tr\", {\n        key: election.id\n      }, __jsx(\"th\", {\n        scope: idx\n      }, idx), __jsx(\"td\", null, __jsx(IdLink, {\n        onClick: function onClick(event, id) {\n          return handleClick(event, election.id);\n        }\n      }, election.id)), __jsx(\"td\", null, election.name), __jsx(\"td\", null, __jsx(Moment, {\n        format: \"MM/DD/YYYY\"\n      }, election.electionDay)));\n    }))), __jsx(\"div\", null, __jsx(\"p\", {\n      className: \"m-3 text-danger\"\n    }, \"Election ID submitted: \", id || \"no id submitted yet\")), elections.length < 50 && __jsx(\"div\", {\n      className: \"card text-center\"\n    }, __jsx(\"h3\", {\n      className: \"card-header\"\n    }, \"If there is no election listed in your area, please check back later for updates\"))));\n  }\n};\n\nexport default ElectionInfo;","map":null,"metadata":{},"sourceType":"module"}