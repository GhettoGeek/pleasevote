{"ast":null,"code":"var _jsxFileName = \"/home/avery/Projects/next-google-api/Components/Input/Form.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState } from 'react';\nimport { useLocalStorage } from 'Components/Hooks/useLocalStorage';\nimport { useInput } from 'Components/Hooks/useInput';\nimport styled from 'styled-components';\nconst Input = styled.input`\n  width: 100%;\n`;\n\nconst Form = props => {\n  const {\n    0: submitted,\n    1: setSubmitted\n  } = useState(null);\n  const [variable, setVariable] = useLocalStorage(props.variable, null);\n  const {\n    value,\n    bind,\n    reset\n  } = useInput('');\n\n  const handleChange = event => {\n    console.log(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Recording ' + props.variable + ' to window.localStorage: ' + value);\n    setSubmitted(true);\n    setVariable(value);\n    reset();\n\n    if (props.close) {\n      props.close();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, props.label, \":\"), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Input, _extends({\n    type: \"text\",\n    size: \"80\",\n    wrap: \"hard\",\n    value: value,\n    placeholder: `Enter ${props.variable} here`\n  }, bind, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), props.showConfirmation && __jsx(\"p\", {\n    className: \"mt-3 text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.label, \" submitted:\", ' ', variable || `no ${props.variable} submitted yet`));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/Components/Input/Form.jsx"],"names":["useState","useLocalStorage","useInput","styled","Input","input","Form","props","submitted","setSubmitted","variable","setVariable","value","bind","reset","handleChange","event","console","log","target","handleSubmit","preventDefault","close","label","showConfirmation"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAM;;CAA3B;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BV,eAAe,CAACM,KAAK,CAACG,QAAP,EAAiB,IAAjB,CAA/C;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAAyBZ,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaP,KAAzB;AACD,GAFD;;AAIA,QAAMQ,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACK,cAAN;AACAJ,IAAAA,OAAO,CAACC,GAAR,CACE,eAAeX,KAAK,CAACG,QAArB,GAAgC,2BAAhC,GAA8DE,KADhE;AAGAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAACC,KAAD,CAAX;AACAE,IAAAA,KAAK;;AACL,QAAIP,KAAK,CAACe,KAAV,EAAiB;AACff,MAAAA,KAAK,CAACe,KAAN;AACD;AACF,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBb,KAAK,CAACgB,KAA7B,MADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEX,KAJT;AAKE,IAAA,WAAW,EAAG,SAAQL,KAAK,CAACG,QAAS;AALvC,KAMMG,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAdF,CADF,EAqBGN,KAAK,CAACiB,gBAAN,IACC;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACgB,KADT,iBAC2B,GAD3B,EAEGb,QAAQ,IAAK,MAAKH,KAAK,CAACG,QAAS,gBAFpC,CAtBJ,CADF;AA8BD,CApDD;;AAsDA,eAAeJ,IAAf","sourcesContent":["import { useState } from 'react';\nimport { useLocalStorage } from 'Components/Hooks/useLocalStorage';\nimport { useInput } from 'Components/Hooks/useInput';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  width: 100%;\n`;\n\nconst Form = (props) => {\n  const [submitted, setSubmitted] = useState(null);\n  const [variable, setVariable] = useLocalStorage(props.variable, null);\n  const { value, bind, reset } = useInput('');\n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\n      'Recording ' + props.variable + ' to window.localStorage: ' + value\n    );\n    setSubmitted(true);\n    setVariable(value);\n    reset();\n    if (props.close) {\n      props.close();\n    }\n  };\n\n  return (\n    <div className='p-2'>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <div className='mb-3'>{props.label}:</div>\n          <div className='mb-3'>\n            <Input\n              type='text'\n              size='80'\n              wrap='hard'\n              value={value}\n              placeholder={`Enter ${props.variable} here`}\n              {...bind}\n            />\n          </div>\n        </label>\n        <div className='mt-3'>\n          <button className='btn btn-primary' type='submit'>\n            Submit\n          </button>\n        </div>\n      </form>\n      {props.showConfirmation && (\n        <p className='mt-3 text-danger'>\n          {props.label} submitted:{' '}\n          {variable || `no ${props.variable} submitted yet`}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}