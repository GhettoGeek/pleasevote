{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/avery/Projects/next-google-api/Components/Cards/GeneralElections.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nvar GeneralElections = function GeneralElections(props) {\n  _s();\n\n  var _useState = useState(true),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var address = JSON.parse(window.localStorage.getItem('address'));\n  var id = window.localStorage.getItem('id');\n  var url = \"/api/voterInfo?id=\".concat(id, \"&address=\").concat(address);\n\n  var fetcher = function fetcher(url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  };\n\n  var _useSWR = useSWR(url, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Failed to load data!\"));\n  if (!data) return __jsx(\"div\", {\n    className: \"spinner-border spinner-border-lg text-danger\",\n    role: \"status\",\n    style: {\n      margin: '10rem',\n      width: '20rem',\n      height: '20rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  });\n\n  if (data && data !== null & !data.data.contests || data.data.contests.length <= 0 || data.data.contests === null) {\n    return __jsx(Card, {\n      bg: \"warning\",\n      className: \"mb-3 shadow text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(Card.Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      className: \"m-3 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Attention: General elections not found in database\")), __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"h5\", {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"If you are aware of an upcoming election, please contact your state's election office to ask for more info\"), __jsx(Link, {\n      href: \"https://www.usa.gov/election-office\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"m-3 font-weight-bold\",\n      style: {\n        textTransform: 'uppercase',\n        color: 'black'\n      },\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, __jsx(\"i\", {\n      className: \"fas fa-info-circle fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), \" \\xA0Click here to search for your state\\xA0\", ' ', __jsx(\"i\", {\n      className: \"fas fa-question-circle fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  if (data && data !== null) {\n    var contests = data.data.contests;\n    var generalElections = [];\n    contests.map(function (contest) {\n      if (contest.type === 'General') {\n        generalElections.push(contest);\n      }\n    });\n\n    var handleIsOpen = function handleIsOpen() {\n      return setIsOpen(!isOpen);\n    };\n\n    return __jsx(Accordion, {\n      defaultActiveKey: \"0\",\n      onClick: handleIsOpen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      className: \"mb-3 shadow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      style: {\n        cursor: 'pointer'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      className: \"card-header bg-primary text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"text-left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Upcoming General Election(s)\"), __jsx(\"span\", {\n      className: \"float-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, isOpen && __jsx(\"i\", {\n      className: \"fas fa-times-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 28\n      }\n    }), !isOpen && __jsx(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"table\", {\n      className: \"table table-striped table-hover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, generalElections.length > 0 && __jsx(\"caption\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \"List of general election contests in your area\"), generalElections.length <= 0 && __jsx(\"caption\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, \"No general election info found\"), generalElections.length > 0 && __jsx(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, __jsx(\"thead\", {\n      style: {\n        fontFamily: 'Space Mono, sans-serif'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, __jsx(\"tr\", {\n      className: \"table-active\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }, __jsx(\"th\", {\n      scope: \"col\",\n      style: {\n        width: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"#\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Office\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"District\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Scope\")), __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Candidates\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Partisan Affiliation\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Jurisdiction\"))), __jsx(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, generalElections.map(function (election, idx) {\n      return __jsx(Fragment, {\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, __jsx(\"tr\", {\n        className: \"font-weight-bold\",\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }\n      }, __jsx(\"td\", {\n        style: {\n          width: '10px',\n          verticalAlign: 'middle'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 31\n        }\n      }, idx + 1)), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, election.office), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, election.district.name), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, election.district.scope)), __jsx(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 27\n        }\n      }, __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, election.candidates.map(function (item, idx) {\n        return __jsx(\"div\", {\n          key: idx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }\n        }, item.name);\n      })), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }, election.candidates.map(function (item, idx) {\n        return __jsx(\"div\", {\n          key: idx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }\n        }, item.party);\n      })), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, election.level.map(function (item, idx) {\n        return __jsx(\"div\", {\n          key: idx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }\n        }, item);\n      }))));\n    }))))))));\n  }\n};\n\n_s(GeneralElections, \"fY+747KENIAMEhwTP04Q3NY07O8=\", false, function () {\n  return [useSWR];\n});\n\n_c = GeneralElections;\nexport default GeneralElections;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralElections\");","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/Components/Cards/GeneralElections.jsx"],"names":["Fragment","useState","Link","useSWR","Accordion","Button","Card","GeneralElections","props","isOpen","setIsOpen","address","JSON","parse","window","localStorage","getItem","id","url","fetcher","fetch","then","r","json","data","error","margin","width","height","contests","length","textTransform","color","generalElections","map","contest","type","push","handleIsOpen","Header","cursor","fontFamily","election","idx","verticalAlign","office","district","name","scope","candidates","item","party","level"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nconst GeneralElections = (props) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const address = JSON.parse(window.localStorage.getItem('address'));\n  const id = window.localStorage.getItem('id');\n  const url = `/api/voterInfo?id=${id}&address=${address}`;\n  const fetcher = (url) => fetch(url).then((r) => r.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  if (error)\n    return (\n      <div className='alert alert-danger' role='alert'>\n        <span className='sr-only'>Failed to load data!</span>\n      </div>\n    );\n\n  if (!data)\n    return (\n      <div\n        className='spinner-border spinner-border-lg text-danger'\n        role='status'\n        style={{ margin: '10rem', width: '20rem', height: '20rem' }}\n      ></div>\n    );\n\n  if (\n    (data && (data !== null) & !data.data.contests) ||\n    data.data.contests.length <= 0 ||\n    data.data.contests === null\n  ) {\n    return (\n      <Card bg='warning' className='mb-3 shadow text-white'>\n        <Card.Header>\n          <h3 className='m-3 font-weight-bold'>\n            Attention: General elections not found in database\n          </h3>\n        </Card.Header>\n        <Card.Body>\n          <h5 className='m-3'>\n            If you are aware of an upcoming election, please contact your\n            state's election office to ask for more info\n          </h5>\n          <Link href='https://www.usa.gov/election-office'>\n            <a\n              className='m-3 font-weight-bold'\n              style={{ textTransform: 'uppercase', color: 'black' }}\n              target='_blank'\n            >\n              <div className='text-center'>\n                <i className='fas fa-info-circle fa-2x'></i> &nbsp;Click here to\n                search for your state&nbsp;{' '}\n                <i className='fas fa-question-circle fa-2x'></i>\n              </div>\n            </a>\n          </Link>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  if (data && data !== null) {\n    const { contests } = data.data;\n\n    const generalElections = [];\n    contests.map((contest) => {\n      if (contest.type === 'General') {\n        generalElections.push(contest);\n      }\n    });\n\n    const handleIsOpen = () => setIsOpen(!isOpen);\n\n    return (\n      <Accordion defaultActiveKey='0' onClick={handleIsOpen}>\n        <Card className='mb-3 shadow'>\n          <Accordion.Toggle\n            as={Card.Header}\n            eventKey='0'\n            style={{ cursor: 'pointer' }}\n          >\n            <h3 className='card-header bg-primary text-white'>\n              <span className='text-left'>Upcoming General Election(s)</span>\n              <span className='float-right'>\n                {isOpen && <i className='fas fa-times-circle'></i>}\n                {!isOpen && <i className='fas fa-plus-circle'></i>}\n              </span>\n            </h3>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey='0'>\n            <Card.Body>\n              <table className='table table-striped table-hover'>\n                {generalElections.length > 0 && (\n                  <caption>\n                    List of general election contests in your area\n                  </caption>\n                )}\n                {generalElections.length <= 0 && (\n                  <caption>No general election info found</caption>\n                )}\n                {generalElections.length > 0 && (\n                  <Fragment>\n                    <thead style={{ fontFamily: 'Space Mono, sans-serif' }}>\n                      <tr className='table-active'>\n                        <th scope='col' style={{ width: '10px' }}>\n                          #\n                        </th>\n                        <th scope='col'>Office</th>\n                        <th scope='col'>District</th>\n                        <th scope='col'>Scope</th>\n                      </tr>\n                      <tr>\n                        <th scope='col'></th>\n                        <th scope='col'>Candidates</th>\n                        <th scope='col'>Partisan Affiliation</th>\n                        <th scope='col'>Jurisdiction</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {generalElections.map((election, idx) => (\n                        <Fragment key={idx}>\n                          <tr className='font-weight-bold' key={idx}>\n                            {/* <td style={{ width: '10px' }}>{idx + 1}</td> */}\n                            <td\n                              style={{ width: '10px', verticalAlign: 'middle' }}\n                            >\n                              <b>{idx + 1}</b>\n                            </td>\n                            <td>{election.office}</td>\n                            <td>{election.district.name}</td>\n                            <td>{election.district.scope}</td>\n                          </tr>\n                          <tr>\n                            <td></td>\n                            <td>\n                              {election.candidates.map((item, idx) => (\n                                <div key={idx}>{item.name}</div>\n                              ))}\n                            </td>\n                            <td>\n                              {election.candidates.map((item, idx) => (\n                                <div key={idx}>{item.party}</div>\n                              ))}\n                            </td>\n                            <td>\n                              {election.level.map((item, idx) => (\n                                <div key={idx}>{item}</div>\n                              ))}\n                            </td>\n                          </tr>\n                        </Fragment>\n                      ))}\n                    </tbody>\n                  </Fragment>\n                )}\n              </table>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n};\n\nexport default GeneralElections;\n"]},"metadata":{},"sourceType":"module"}