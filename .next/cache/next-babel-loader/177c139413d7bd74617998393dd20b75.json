{"ast":null,"code":"var _jsxFileName = \"/home/avery/Projects/next-google-api/Components/Cards/StoredInfoCard.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nconst StoredInfoCard = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n  const address = JSON.parse(window.localStorage.getItem('address'));\n  const id = JSON.parse(window.localStorage.getItem('id'));\n\n  const handleIsOpen = () => setIsOpen(!isOpen);\n\n  return __jsx(Accordion, {\n    defaultActiveKey: \"0\",\n    onClick: handleIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    className: \"mb-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Accordion.Toggle, {\n    as: Card.Header,\n    color: \"Primary\",\n    eventKey: \"0\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"card-header bg-primary text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Currently Stored Info:\"), __jsx(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, isOpen && __jsx(\"i\", {\n    className: \"fas fa-times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }\n  }), !isOpen && __jsx(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }\n  })))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-info-circle fa-3x float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"m-3 text-center blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"If visiting the site again, your info may be saved from last visit\"), __jsx(\"div\", {\n    className: \"m-3 text-danger text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Stored Address: \", address || 'none currently stored'), __jsx(\"div\", {\n    className: \"m-3 text-danger text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Stored Election ID: \", id || 'none currently stored'), __jsx(\"div\", {\n    className: \"m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Use the buttons below to update values\"))))));\n};\n\nexport default StoredInfoCard;","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/Components/Cards/StoredInfoCard.jsx"],"names":["Link","useState","Accordion","Button","Card","StoredInfoCard","props","isOpen","setIsOpen","address","JSON","parse","window","localStorage","getItem","id","handleIsOpen","Header","cursor"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,iBAAxC;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAX,CAAhB;AACA,QAAMC,EAAE,GAAGL,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,IAA5B,CAAX,CAAX;;AAEA,QAAME,YAAY,GAAG,MAAMR,SAAS,CAAC,CAACD,MAAF,CAApC;;AAEA,SACE,MAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAgC,IAAA,OAAO,EAAES,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,CAAW,MAAX;AACE,IAAA,EAAE,EAAEZ,IAAI,CAACa,MADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,QAAQ,EAAC,GAHX;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,MAAM,IAAI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,EAEG,CAACA,MAAD,IAAW;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,CAFF,CANF,CADF,EAeE,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADF,EAKE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBE,OAAO,IAAI,uBAD9B,CALF,EAQE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBM,EAAE,IAAI,uBAD7B,CARF,EAcE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAdF,CAJF,CADF,CAfF,CADF,CADF;AA2CD,CAlDD;;AAoDA,eAAeV,cAAf","sourcesContent":["import Link from 'next/link';\n\nimport { useState } from 'react';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nconst StoredInfoCard = (props) => {\n  const [isOpen, setIsOpen] = useState(true);\n  const address = JSON.parse(window.localStorage.getItem('address'));\n  const id = JSON.parse(window.localStorage.getItem('id'));\n\n  const handleIsOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <Accordion defaultActiveKey='0' onClick={handleIsOpen}>\n      <Card className='mb-3 shadow'>\n        <Accordion.Toggle\n          as={Card.Header}\n          color='Primary'\n          eventKey='0'\n          style={{ cursor: 'pointer' }}\n        >\n          <h3 className='card-header bg-primary text-white'>\n            <span className='text-left'>Currently Stored Info:</span>\n            <span className='float-right'>\n              {isOpen && <i className='fas fa-times-circle'></i>}\n              {!isOpen && <i className='fas fa-plus-circle'></i>}\n            </span>\n          </h3>\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body>\n            <div>\n              <i className='fas fa-info-circle fa-3x float-left'></i>\n            </div>\n            <div className='m-3 text-center blockquote'>\n              <div className='blockquote'>\n                If visiting the site again, your info may be saved from last\n                visit\n              </div>\n              <div className='m-3 text-danger text-left'>\n                Stored Address: {address || 'none currently stored'}\n              </div>\n              <div className='m-3 text-danger text-left'>\n                Stored Election ID: {id || 'none currently stored'}\n              </div>\n              {/* <div className='m-3'>\n                (Note: info stored on your device, not our server)\n              </div> */}\n              <div className='m-3'>Use the buttons below to update values</div>\n            </div>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\n\nexport default StoredInfoCard;\n"]},"metadata":{},"sourceType":"module"}