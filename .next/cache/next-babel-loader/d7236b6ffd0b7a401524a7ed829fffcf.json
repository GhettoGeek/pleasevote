{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { useLocalStorage } from 'Components/Hooks/useLocalStorage';\nimport { useInput } from 'Components/Hooks/useInput';\nimport styled from 'styled-components';\nvar Input = styled.input(_templateObject());\n\nvar Form = function Form(props) {\n  var _useState = useState(null),\n      submitted = _useState[0],\n      setSubmitted = _useState[1];\n\n  var _useLocalStorage = useLocalStorage(props.variable, null),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      variable = _useLocalStorage2[0],\n      setVariable = _useLocalStorage2[1];\n\n  var _useInput = useInput(''),\n      value = _useInput.value,\n      bind = _useInput.bind,\n      reset = _useInput.reset;\n\n  var handleChange = function handleChange(event) {\n    console.log(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    console.log('Recording ' + props.variable + ' to window.localStorage: ' + value);\n    setSubmitted(true);\n    setVariable(value);\n    reset();\n\n    if (props.close) {\n      props.close();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-2\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", null, __jsx(\"div\", {\n    className: \"mb-3\"\n  }, props.label, \":\"), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(Input, _extends({\n    type: \"text\",\n    size: \"80\",\n    wrap: \"hard\",\n    value: value,\n    placeholder: \"Enter \".concat(props.variable, \" here\")\n  }, bind)))), __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\"\n  }, \"Submit\"))), props.showConfirmation && __jsx(\"p\", {\n    className: \"mt-3 text-danger\"\n  }, props.label, \" submitted:\", ' ', variable || \"no \".concat(props.variable, \" submitted yet\")));\n};\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}