{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/avery/Projects/next-google-api/Components/Cards/PollingLocations.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nvar PollingLocations = function PollingLocations(props) {\n  _s();\n\n  var _useState = useState(true),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var address = JSON.parse(window.localStorage.getItem('address'));\n  var id = window.localStorage.getItem('id');\n  console.log(address, id);\n  var url = \"/api/voterInfo?id=\".concat(id, \"&address=\").concat(address);\n\n  var fetcher = function fetcher(url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  };\n\n  var _useSWR = useSWR(url, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Failed to load data!\"));\n  if (!data) return __jsx(\"div\", {\n    className: \"spinner-border spinner-border-lg text-danger\",\n    role: \"status\",\n    style: {\n      margin: '10rem',\n      width: '20rem',\n      height: '20rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  });\n\n  var handleIsOpen = function handleIsOpen() {\n    return setIsOpen(!isOpen);\n  };\n\n  if (data && data !== null & !data.data.pollingLocations || data.data.pollingLocations.length <= 0 || data.data.pollingLocations === null) {\n    return __jsx(Card, {\n      bg: \"danger\",\n      className: \"mb-3 shadow text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(Card.Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      className: \"m-3 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Attention: Polling locations not found in database.\")), __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(\"h5\", {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Please contact your state's Secretary of State office to ask where your local polling location is located\"), __jsx(Link, {\n      href: \"https://www.usa.gov/election-office\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"m-3 font-weight-bold\",\n      style: {\n        textTransform: 'uppercase',\n        color: 'black'\n      },\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(\"i\", {\n      className: \"fas fa-info-circle fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), \" \\xA0Click here to search for your state\\xA0\", ' ', __jsx(\"i\", {\n      className: \"fas fa-question-circle fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  if (data && data !== null) {\n    var pollingLocations = data.data.pollingLocations;\n    return __jsx(Accordion, {\n      defaultActiveKey: \"0\",\n      onClick: handleIsOpen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      className: \"mb-3 shadow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      style: {\n        cursor: 'pointer'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      className: \"card-header bg-primary text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"text-left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Available Polling Location(s) \\xA0\"), __jsx(\"span\", {\n      className: \"float-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, isOpen && __jsx(\"i\", {\n      className: \"fas fa-times-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }\n    }), !isOpen && __jsx(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    })))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, pollingLocations.length > 0 && __jsx(Card, {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, pollingLocations.map(function (location, idx) {\n      return __jsx(Fragment, {\n        key: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        style: {\n          fontFamily: 'Righteous, sans-serif'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, __jsx(\"h3\", {\n        className: \"card-title\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, location.address.locationName)), __jsx(\"div\", {\n        className: \"card-body text-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      }, __jsx(\"h3\", {\n        className: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Address:\"), __jsx(\"div\", {\n        className: \"display-4 font-weight-bold\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        className: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      }, location.address.line1), __jsx(\"p\", {\n        className: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }\n      }, location.address.line2), __jsx(\"p\", {\n        className: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }\n      }, location.address.city, \", \", location.address.state, ' ', location.address.zip))), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 23\n        }\n      }, __jsx(\"h3\", {\n        className: \"card-title text-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, \"Location hours and information:\"), __jsx(\"div\", {\n        className: \"font-weight-bold\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        className: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 27\n        }\n      }, location.pollingHours)), __jsx(\"div\", {\n        className: \"card-body\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        className: \"card-title\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 27\n        }\n      }, \"Source: \", location.sources[0].name), location.sources[0].official && __jsx(\"p\", {\n        className: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, \"(Verified source) \"))));\n    })), pollingLocations.length < 0 && __jsx(\"div\", {\n      className: \"jumbotron\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"No polling locations shown at this time\"))))));\n  }\n};\n\n_s(PollingLocations, \"fY+747KENIAMEhwTP04Q3NY07O8=\", false, function () {\n  return [useSWR];\n});\n\n_c = PollingLocations;\nexport default PollingLocations;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollingLocations\");","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/Components/Cards/PollingLocations.jsx"],"names":["Fragment","useState","Link","useSWR","Accordion","Button","Card","PollingLocations","props","isOpen","setIsOpen","address","JSON","parse","window","localStorage","getItem","id","console","log","url","fetcher","fetch","then","r","json","data","error","margin","width","height","handleIsOpen","pollingLocations","length","textTransform","color","Header","cursor","map","location","idx","fontFamily","locationName","line1","line2","city","state","zip","pollingHours","sources","name","official"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nconst PollingLocations = (props) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const address = JSON.parse(window.localStorage.getItem('address'));\n  const id = window.localStorage.getItem('id');\n  console.log(address, id);\n  const url = `/api/voterInfo?id=${id}&address=${address}`;\n  const fetcher = (url) => fetch(url).then((r) => r.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  if (error)\n    return (\n      <div className='alert alert-danger' role='alert'>\n        <span className='sr-only'>Failed to load data!</span>\n      </div>\n    );\n\n  if (!data)\n    return (\n      <div\n        className='spinner-border spinner-border-lg text-danger'\n        role='status'\n        style={{ margin: '10rem', width: '20rem', height: '20rem' }}\n      ></div>\n    );\n\n  const handleIsOpen = () => setIsOpen(!isOpen);\n\n  if (\n    (data && (data !== null) & !data.data.pollingLocations) ||\n    data.data.pollingLocations.length <= 0 ||\n    data.data.pollingLocations === null\n  ) {\n    return (\n      <Card bg='danger' className='mb-3 shadow text-white'>\n        <Card.Header>\n          <h3 className='m-3 font-weight-bold'>\n            Attention: Polling locations not found in database.\n          </h3>\n        </Card.Header>\n        <Card.Body>\n          <h5 className='m-3'>\n            Please contact your state's Secretary of State office to ask where\n            your local polling location is located\n          </h5>\n          <Link href='https://www.usa.gov/election-office'>\n            <a\n              className='m-3 font-weight-bold'\n              style={{ textTransform: 'uppercase', color: 'black' }}\n              target='_blank'\n            >\n              <div className='text-center'>\n                <i className='fas fa-info-circle fa-2x'></i> &nbsp;Click here to\n                search for your state&nbsp;{' '}\n                <i className='fas fa-question-circle fa-2x'></i>\n              </div>\n            </a>\n          </Link>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  if (data && data !== null) {\n    const { pollingLocations } = data.data;\n\n    return (\n      <Accordion defaultActiveKey='0' onClick={handleIsOpen}>\n        <Card className='mb-3 shadow'>\n          <Accordion.Toggle\n            as={Card.Header}\n            eventKey='0'\n            style={{ cursor: 'pointer' }}\n          >\n            <h3 className='card-header bg-primary text-white'>\n              <span className='text-left'>\n                Available Polling Location(s) &nbsp;\n              </span>\n              <span className='float-right'>\n                {isOpen && <i className='fas fa-times-circle'></i>}\n                {!isOpen && <i className='fas fa-plus-circle'></i>}\n              </span>\n            </h3>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey='0'>\n            <Card.Body>\n              {pollingLocations.length > 0 && (\n                <Card className='m-3'>\n                  {pollingLocations.map((location, idx) => (\n                    <Fragment key={idx}>\n                      <div\n                        className='card-header'\n                        style={{ fontFamily: 'Righteous, sans-serif' }}\n                      >\n                        <h3 className='card-title'>\n                          {location.address.locationName}\n                        </h3>\n                      </div>\n                      <div className='card-body text-center'>\n                        <h3 className='card-text'>Address:</h3>\n                        <div className='display-4 font-weight-bold'>\n                          <p className='card-text'>{location.address.line1}</p>\n                          <p className='card-text'>{location.address.line2}</p>\n                          <p className='card-text'>\n                            {location.address.city}, {location.address.state}{' '}\n                            {location.address.zip}\n                          </p>\n                        </div>\n                      </div>\n                      <div className='card-footer'>\n                        <h3 className='card-title text-center'>\n                          Location hours and information:\n                        </h3>\n                        <div className='font-weight-bold'>\n                          <p className='card-text'>{location.pollingHours}</p>\n                        </div>\n                        <div className='card-body'>\n                          <p className='card-title'>\n                            Source: {location.sources[0].name}\n                          </p>\n                          {location.sources[0].official && (\n                            <p className='card-text'>(Verified source) </p>\n                          )}\n                        </div>\n                      </div>\n                    </Fragment>\n                  ))}\n                </Card>\n              )}\n              {pollingLocations.length < 0 && (\n                <div className='jumbotron'>\n                  <p>No polling locations shown at this time</p>\n                </div>\n              )}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n};\n\nexport default PollingLocations;\n"]},"metadata":{},"sourceType":"module"}