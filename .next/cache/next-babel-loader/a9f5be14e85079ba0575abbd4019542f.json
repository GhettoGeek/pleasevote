{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/avery/Projects/next-google-api/Components/Dialogs/ElectionDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: blue;\\n  text-decoration: none;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport Moment from 'react-moment';\nimport styled from 'styled-components';\nimport { Card } from 'react-bootstrap';\nvar IdLink = styled.a(_templateObject());\n_c = IdLink;\n\nvar ElectionInfo = function ElectionInfo(props) {\n  _s();\n\n  var _useState = useState(null),\n      submitted = _useState[0],\n      setSubmitted = _useState[1];\n\n  var _useState2 = useState(id, null),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var router = useRouter();\n  var url = '/api/elections';\n\n  var fetcher = function fetcher(url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  };\n\n  var _useSWR = useSWR(url, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Failed to load data\"));\n  if (!data) return __jsx(\"div\", {\n    className: \"spinner-border spinner-border-lg text-danger\",\n    role: \"status\",\n    style: {\n      margin: '10rem',\n      width: '20rem',\n      height: '20rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  });\n\n  if (data && data !== null & !data.data.elections || data.data.elections.length <= 0 || data.data.elections === null) {\n    return __jsx(Card, {\n      bg: \"danger\",\n      className: \"mb-3 shadow text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, __jsx(Card.Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      className: \"m-3 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Attention: General elections not found in database\")), __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"h5\", {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"If you are aware of an upcoming election, please contact your state's election office to ask for more info\"), __jsx(Link, {\n      href: \"https://www.usa.gov/election-office\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"m-3 font-weight-bold\",\n      style: {\n        textTransform: 'uppercase',\n        color: 'black'\n      },\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, __jsx(\"i\", {\n      className: \"fas fa-info-circle fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), \" \\xA0Click here to search for your state\\xA0\", ' ', __jsx(\"i\", {\n      className: \"fas fa-question-circle fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  if (data && data !== null) {\n    var elections = data.data.elections;\n\n    var handleClick = function handleClick(event, id) {\n      event.preventDefault();\n      console.log('Recording ' + id + ' to window.localStorage');\n      window.localStorage.removeItem('id');\n      window.localStorage.setItem('id', id);\n      setSubmitted(true);\n      setId(id);\n      router.push('/voterinfo');\n    }; // const handleIsOpen = () => setIsOpen(!isOpen);\n\n\n    return __jsx(Card, {\n      className: \"mb-3 shadow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"blockquote\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Click \\xA0\", __jsx(\"i\", {\n      className: \"far fa-hand-point-down fa-2x\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }\n    }), \"\\xA0 election id in your area\")), __jsx(\"table\", {\n      className: \"table table-hover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, __jsx(\"thead\", {\n      style: {\n        fontFamily: 'Righteous, sans-serif'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"#\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Date\"))), __jsx(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, elections.map(function (election, idx) {\n      return __jsx(\"tr\", {\n        key: election.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, __jsx(\"th\", {\n        scope: idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, idx), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }, __jsx(IdLink, {\n        onClick: function onClick(event, id) {\n          return handleClick(event, election.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, election.id)), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, election.name), __jsx(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, __jsx(Moment, {\n        format: \"MM/DD/YYYY\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, election.electionDay)));\n    }))), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"m-3 text-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"Election ID submitted: \", id || \"no id submitted yet\")), elections.length < 50 && __jsx(\"div\", {\n      className: \"card text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      className: \"card-header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"If there is no election listed in your area, please check back later for updates\"))));\n  }\n};\n\n_s(ElectionInfo, \"C+Vjr0z9Lrg5moBTSnVkw1zUjdo=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c2 = ElectionInfo;\nexport default ElectionInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IdLink\");\n$RefreshReg$(_c2, \"ElectionInfo\");","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/Components/Dialogs/ElectionDialog.jsx"],"names":["useState","useRouter","Link","useSWR","Moment","styled","Card","IdLink","a","ElectionInfo","props","submitted","setSubmitted","id","setId","router","url","fetcher","fetch","then","r","json","data","error","margin","width","height","elections","length","textTransform","color","handleClick","event","preventDefault","console","log","window","localStorage","removeItem","setItem","push","fontFamily","map","election","idx","name","electionDay"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport Moment from 'react-moment';\nimport styled from 'styled-components';\nimport { Card } from 'react-bootstrap';\n\nconst IdLink = styled.a`\n  color: blue;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nconst ElectionInfo = (props) => {\n  const [submitted, setSubmitted] = useState(null);\n  const [id, setId] = useState(id, null);\n  const router = useRouter();\n\n  const url = '/api/elections';\n  const fetcher = (url) => fetch(url).then((r) => r.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  if (error)\n    return (\n      <div className='alert alert-danger' role='alert'>\n        <span className='sr-only'>Failed to load data</span>\n      </div>\n    );\n\n  if (!data)\n    return (\n      <div\n        className='spinner-border spinner-border-lg text-danger'\n        role='status'\n        style={{ margin: '10rem', width: '20rem', height: '20rem' }}\n      ></div>\n    );\n\n  if (\n    (data && (data !== null) & !data.data.elections) ||\n    data.data.elections.length <= 0 ||\n    data.data.elections === null\n  ) {\n    return (\n      <Card bg='danger' className='mb-3 shadow text-white'>\n        <Card.Header>\n          <h3 className='m-3 font-weight-bold'>\n            Attention: General elections not found in database\n          </h3>\n        </Card.Header>\n        <Card.Body>\n          <h5 className='m-3'>\n            If you are aware of an upcoming election, please contact your\n            state's election office to ask for more info\n          </h5>\n          <Link href='https://www.usa.gov/election-office'>\n            <a\n              className='m-3 font-weight-bold'\n              style={{ textTransform: 'uppercase', color: 'black' }}\n              target='_blank'\n            >\n              <div className='text-center'>\n                <i className='fas fa-info-circle fa-2x'></i> &nbsp;Click here to\n                search for your state&nbsp;{' '}\n                <i className='fas fa-question-circle fa-2x'></i>\n              </div>\n            </a>\n          </Link>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  if (data && data !== null) {\n    const { elections } = data.data;\n\n    const handleClick = (event, id) => {\n      event.preventDefault();\n      console.log('Recording ' + id + ' to window.localStorage');\n      window.localStorage.removeItem('id');\n      window.localStorage.setItem('id', id);\n      setSubmitted(true);\n      setId(id);\n      router.push('/voterinfo');\n    };\n\n    // const handleIsOpen = () => setIsOpen(!isOpen);\n\n    return (\n      <Card className='mb-3 shadow'>\n        <Card.Body>\n          <div>\n            <p className='blockquote'>\n              Click &nbsp;<i className='far fa-hand-point-down fa-2x'></i>\n              &nbsp; election id in your area\n            </p>\n          </div>\n          <table className='table table-hover'>\n            <thead style={{ fontFamily: 'Righteous, sans-serif' }}>\n              <tr>\n                <th scope='col'>#</th>\n                <th scope='col'>ID</th>\n                <th scope='col'>Name</th>\n                <th scope='col'>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {elections.map((election, idx) => (\n                <tr key={election.id}>\n                  <th scope={idx}>{idx}</th>\n                  <td>\n                    <IdLink\n                      onClick={(event, id) => handleClick(event, election.id)}\n                    >\n                      {election.id}\n                    </IdLink>\n                  </td>\n                  <td>{election.name}</td>\n                  <td>\n                    <Moment format='MM/DD/YYYY'>{election.electionDay}</Moment>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div>\n            <p className='m-3 text-danger'>\n              Election ID submitted: {id || `no id submitted yet`}\n            </p>\n          </div>\n          {elections.length < 50 && (\n            <div className='card text-center'>\n              <h3 className='card-header'>\n                If there is no election listed in your area, please check back\n                later for updates\n              </h3>\n            </div>\n          )}\n          {/* <div className='m-3 text-center'>\n            <Link href='/voterinfo'>\n              <button className='btn btn-primary btn-block'>\n                <h3>\n                  Visit Voter Information Page{' '}\n                  <div className='float-right'>\n                    <i className='fas fa-arrow-alt-circle-right'></i>\n                  </div>\n                </h3>\n              </button>\n            </Link>\n          </div> */}\n        </Card.Body>\n      </Card>\n    );\n  }\n};\n\nexport default ElectionInfo;\n"]},"metadata":{},"sourceType":"module"}