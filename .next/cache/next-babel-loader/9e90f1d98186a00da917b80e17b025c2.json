{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/avery/Projects/next-google-api/Components/Cards/CountdownTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { ticker, timeRemaining } from 'lib/timerLogic';\nimport { Accordion, Button, Card } from 'react-bootstrap';\nimport { ClockFace, OuterShadow } from 'styles/styledComponents';\n\nvar CountdownTimer = function CountdownTimer(_ref) {\n  _s();\n\n  var endTime = _ref.endTime,\n      label = _ref.label;\n\n  var _useState = useState(timeRemaining(endTime)),\n      timeLeft = _useState[0],\n      setTimeLeft = _useState[1];\n\n  var _useState2 = useState(true),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setTimeLeft(timeRemaining(endTime));\n    }, 1000);\n  });\n\n  var handleStartClock = function handleStartClock() {\n    setTimeLeft(ticker);\n  };\n\n  var handleStopClock = function handleStopClock() {\n    setTimeLeft(ticker);\n  };\n\n  var handleIsOpen = function handleIsOpen() {\n    return setIsOpen(!isOpen);\n  };\n\n  return __jsx(Accordion, {\n    defaultActiveKey: \"0\",\n    onClick: handleIsOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    className: \"mb-3 shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Accordion.Toggle, {\n    as: Card.Header,\n    color: \"Primary\",\n    eventKey: \"0\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"card-header bg-primary text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"text-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Countdown Timer \\xA0\"), __jsx(\"span\", {\n    className: \"float-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, isOpen && __jsx(\"i\", {\n    className: \"fas fa-times-circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }\n  }), !isOpen && __jsx(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  })))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Body, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-1 \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, label, __jsx(ClockFace, {\n    className: \"text-danger card card-body mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, timeLeft.remaining.days, \"d \", timeLeft.remaining.hours, \"h\", ' ', timeLeft.remaining.minutes, \"m \", timeLeft.remaining.seconds, \"s\"))))));\n};\n\n_s(CountdownTimer, \"1o464u59VlAeeNYMSHI2fDksLg0=\");\n\n_c = CountdownTimer;\nexport default CountdownTimer;\n{\n  /* <button\n  className='btn btn-outline-primary m-3'\n  onClick={handleStartClock}\n  >\n  Start clock\n  </button>\n  <button\n  className='btn btn-outline-dark m-3'\n  onClick={handleStopClock}\n  >\n  Stop clock\n  </button> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"sources":["/home/avery/Projects/next-google-api/Components/Cards/CountdownTimer.jsx"],"names":["useState","useEffect","ticker","timeRemaining","Accordion","Button","Card","ClockFace","OuterShadow","CountdownTimer","endTime","label","timeLeft","setTimeLeft","isOpen","setIsOpen","timer","setTimeout","handleStartClock","handleStopClock","handleIsOpen","Header","cursor","remaining","days","hours","minutes","seconds"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ticker, timeRemaining } from 'lib/timerLogic';\nimport { Accordion, Button, Card } from 'react-bootstrap';\nimport { ClockFace, OuterShadow } from 'styles/styledComponents';\n\nconst CountdownTimer = ({ endTime, label }) => {\n  const [timeLeft, setTimeLeft] = useState(timeRemaining(endTime));\n  const [isOpen, setIsOpen] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(timeRemaining(endTime));\n    }, 1000);\n  });\n\n  const handleStartClock = () => {\n    setTimeLeft(ticker);\n  };\n\n  const handleStopClock = () => {\n    setTimeLeft(ticker);\n  };\n\n  const handleIsOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <Accordion defaultActiveKey='0' onClick={handleIsOpen}>\n      <Card className='mb-3 shadow'>\n        <Accordion.Toggle\n          as={Card.Header}\n          color='Primary'\n          eventKey='0'\n          style={{ cursor: 'pointer' }}\n        >\n          <h3 className='card-header bg-primary text-white'>\n            <span className='text-left'>Countdown Timer &nbsp;</span>\n            <span className='float-right'>\n              {isOpen && <i className='fas fa-times-circle'></i>}\n              {!isOpen && <i className='fas fa-plus-circle'></i>}\n            </span>\n          </h3>\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body className='text-center'>\n            <h1 className='display-1 '>\n              {label}\n              <ClockFace className='text-danger card card-body mt-3'>\n                {timeLeft.remaining.days}d {timeLeft.remaining.hours}h{' '}\n                {timeLeft.remaining.minutes}m {timeLeft.remaining.seconds}s\n              </ClockFace>\n            </h1>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\n\nexport default CountdownTimer;\n\n{\n  /* <button\n  className='btn btn-outline-primary m-3'\n  onClick={handleStartClock}\n>\nStart clock\n</button>\n<button\nclassName='btn btn-outline-dark m-3'\nonClick={handleStopClock}\n>\nStop clock\n</button> */\n}\n"]},"metadata":{},"sourceType":"module"}